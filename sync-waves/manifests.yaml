apiVersion: batch/v1
kind: Job
metadata:
  name: rollout-manager-job-sleep-300
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "-1"
spec:
  template:
    spec:
      containers:
        - name: rollout-manager-job-sleep-300
          image: alpine:latest
          command: ["bash", "-c", 'echo "Starting rollout manager job at $(date +"%Y-%m-%d %H:%M:%S")";for i in {1..10}; do echo $i;sleep 5;done;echo "Ending rollout manager job at $(date +"%Y-%m-%d %H:%M:%S")";']
          echo "Starting rollout manager job at $(date +"%Y-%m-%d %H:%M:%S")";for i in {1..10}; do echo $i;sleep 5;done;echo "Ending rollout manager job at $(date +"%Y-%m-%d %H:%M:%S")";
      restartPolicy: Never
  backoffLimit: 0
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: dispatcher
  annotations:
    argocd.argoproj.io/sync-wave: "0"  
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: dispatcher
  template:
    metadata:
      labels:
        tier: dispatcher
    spec:
      containers:
        - name: dispatcher
          image: nginx:latest
---
apiVersion: v1
kind: Service
metadata:
  name: dispatcher
  annotations:
    argocd.argoproj.io/sync-wave: "0"  
spec:
  selector:
    tier: dispatcher
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: provisioner-a
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: provisioner-a
  template:
    metadata:
      labels:
        tier: provisioner-a
    spec:
      containers:
        - name: provisioner-a
          image: nginx:latest
